
plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version "1.3.0"
}

group = 'org.rundeck'
archivesBaseName = 'rundeck-data-models'
version = '1.0.6'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty('sonatypeUsername')
            password = findProperty('sonatypePassword')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Rundeck Data Models'
                description = 'Data models for persistent Rundeck data'
                url = 'https://rundeck.org'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'sjoyner'
                        name = 'Stephen Joyner'
                        email = 'sjoyner@pagerduty.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/rundeck/rundeck-data-models.git'
                    developerConnection = 'scm:git:ssh://github.com/rundeck/rundeck-data-models.git'
                    url = 'https://github.com/rundeck/rundeck-data-models'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username findProperty('sonatypeUsername')
                password findProperty('sonatypePassword')
            }
        }
    }
}

if(findProperty("signing.keyId") != null && findProperty("signing.password") != null) {
    signing {
        sign(publishing.publications)
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}